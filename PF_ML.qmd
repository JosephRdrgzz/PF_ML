---
title: "PF_ML"
format: pdf
editor: visual
---

## Entendimiento del negocio

### a. ¬øPor qu√© se implement√≥ el etiquetado frontal?

El Gobierno de M√©xico implement√≥ el etiquetado frontal de advertencia en alimentos y bebidas en respuesta a una **grave crisis de salud p√∫blica** causada por las alt√≠simas tasas de obesidad y enfermedades cr√≥nicas ligadas a la mala alimentaci√≥n. M√©xico se hab√≠a posicionado como l√≠der mundial en obesidad infantil y segundo lugar en obesidad de adolescentes y adultos, lo que deriv√≥ en un incremento dram√°tico de padecimientos como la diabetes. Tan solo en la √∫ltima d√©cada, las muertes por diabetes alcanzaron niveles alarmantes. Frente a esta emergencia, el gobierno impuls√≥ la modificaci√≥n de la Norma Oficial NOM-051 para introducir un nuevo etiquetado frontal con sellos de advertencia. Este etiquetado entr√≥ en vigor el **1 de octubre de 2020** y busca informar de forma clara y visible sobre el exceso de az√∫cares, sodio, grasas y calor√≠as en productos procesados, de modo que los consumidores puedan tomar decisiones m√°s saludables.

### b. Diccionario de variables

| Variable | Tipo | Valores / Rango | Unidades | Definici√≥n |
|---------------|---------------|---------------|---------------|---------------|
| P1 | Categ√≥rica ordinal | 1-7, 9 | Calor√≠as | Estima cu√°ntas calor√≠as diarias debe ingerir una persona similar |
| P3 | Categ√≥rica nominal | 1=S√≠, 2=No, 9=NS/NR | ‚Äî | Conocimiento de la existencia de info nutrimental |
| P4 | Categ√≥rica nominal | 1=S√≠, 2=No, 9=NS/NR | ‚Äî | Si lee o no la informaci√≥n nutrimental |
| P7 | Categ√≥rica ordinal | 1 a 5, 9 | ‚Äî | Frecuencia con la que elige productos por informaci√≥n del empaque |
| Edad | Num√©rica continua | 20‚Äì112 | A√±os | Edad del entrevistado |
| Sexo | Categ√≥rica nominal | 1=Hombre, 2=Mujer | ‚Äî | Sexo del entrevistado |
| Entidad federativa | Categ√≥rica | 1‚Äì32 | ‚Äî | Estado de residencia |
| Dominio | Categ√≥rica | 1=Urbano, 2=Rural | ‚Äî | Tipo de localidad |
| Regi√≥n | Categ√≥rica | 1=Norte, 2=Centro, 3=CDMX, 4=Sur | ‚Äî | Zona geogr√°fica |
| Estrato | Categ√≥rica | 1‚Äì4 | ‚Äî | Nivel socioecon√≥mico |
| Estrato de dise√±o | Texto | ID | ‚Äî | Identificador geogr√°fico de estrato muestral |
| UPM de dise√±o | Texto | ID | ‚Äî | Unidad Primaria de Muestreo |

> üí° Los valores "9" en preguntas P1, P3, P4, y P7 representan "No sabe / No responde" y se tratan como NA.

------------------------------------------------------------------------

### c. Problemas de clasificaci√≥n

#### i. Problema 1

**Objetivo:** Predecir si una persona **NO** lee la informaci√≥n nutrimental (P4).

-   Variable dependiente: `P4` ‚àà Œ©‚ÇÄ = {NO, SI}
-   Valor de inter√©s: "NO"
-   Predictoras: `P1`, `P3`, `Edad`, `Sexo`, `Entidad federativa`, `Dominio`, `Regi√≥n`, `Estrato sociodemogr√°fico`

#### ii. Problema 2

**Objetivo:** Predecir la **frecuencia** con que una persona elige productos por informaci√≥n del empaque (`P7`, valores ordinales del 1 al 5).

-   Variable dependiente: `P7`
-   Predictoras: mismas que en problema 1, pero **no se usa P4**

------------------------------------------------------------------------

### d. Lectura y preparaci√≥n de los datos

```{r}
prob1 <- read.csv("datosTF.csv", header = TRUE)
```

i\. Crear 2 subconjuntos de datos, uno por problema.

```{r}
prob1 <- read.csv("datosTF.csv", header = TRUE)
```

```{r}
prob2 <- read.csv("datosTF.csv", header = TRUE)
```

ii\. Eliminar los renglones con NA y de las personas que no saben o no respondieron (c√≥digo 9).

```{r}
nrow(prob1)  # antes
#quitar los NA haciendo que los 9 se conviertan en NA
prob1$P4[prob1$P4 == 9] <- NA
#quitanto na
prob1 <- na.omit(prob1)
nrow(prob1)  # despues
```

```{r}
nrow(prob2)  # antes
#parar 9s a na
prob2$P7[prob2$P7 == 9] <- NA
#pasamos a factor ordinal
prob2 <- na.omit(prob2)
nrow(prob2)  # despues
```

iii\. Sustituir en la variable dependiente el valor num√©rico por su significado (c√≥digo).

```{r}
#para p1
# Convertir P4 num√©rico a "SI"/"NO"
prob1$P4 <- ifelse(prob1$P4 == 1, "SI", "NO")
prob1$P4 <- factor(prob1$P4, levels = c("NO","SI"))
```

```{r}
#para p2
prob2$P7 <- factor(prob2$P7, 
                   levels = 1:5,
                   labels = c("Nunca", "Casi nunca", "A veces", 
                              "Casi siempre", "Siempre"),
                   ordered = TRUE)
```

iv\. Reportar el n√∫mero de renglones que qued√≥ en cada uno.

```{r}
# Contar renglones en cada conjunto
nrow(prob1)  # N√∫mero de renglones en problema 1
nrow(prob2)  # N√∫mero de renglones en problema 
```

Problema 1.

2\. Entendimiento de los datos

An√°lisis estad√≠stico de los rasgos del vector de caracter√≠sticas (apoyarse de gr√°ficos, de tama√±o apropiado)

a\. N√∫mero de datos faltantes por columna.

```{r}
#carga de datos
library(tidyverse)
problema1 <- read.csv("datosTF.csv", header = TRUE)
glimpse(problema1)   # estructura y tipos de datos
```

b\. An√°lisis univariado.

```{r}
#  Contar y mostrar NAs por columna
na_por_col <- colSums(is.na(problema1))
print(na_por_col)
```

```{r}
barplot(na_por_col,
        las   = 2,                          
        ylim  = c(0, 15000))
```

c\. An√°lisis de correlaci√≥n.

```{r}

# Cargar datos
datos <- read.csv("datosTF.csv", header = TRUE)

# Paso 1: Crear variable binaria para P4 (1 = SI, 0 = NO, NA = no responde)
datos$P4_bin <- ifelse(datos$P4 == 1, 1,
                       ifelse(datos$P4 == 2, 0, NA))

# Paso 2: Eliminar filas donde P4_bin es NA
df_filtrado <- datos[!is.na(datos$P4_bin), ]

# Paso 3: Seleccionar variables num√©ricas incluyendo P3 y excluyendo P7
vars_numericas <- df_filtrado %>%
  select(P1, P3, EDAD, SEXO, ENT, DOMINIO, REGION, EST_DIS, UPM_DIS, ESTRATO)

# Paso 4: Calcular correlaciones con P4_bin
correlaciones <- cor(df_filtrado$P4_bin, vars_numericas)

# Paso 5: Asignar nombres legibles
nombres_legibles <- c(
  "P1 (calor√≠as)", 
  "P3 (conoce info)", 
  "Edad", 
  "Sexo", 
  "Entidad", 
  "Dominio", 
  "Regi√≥n", 
  "Estrato dise√±o", 
  "UPM dise√±o", 
  "Estrato socioecon√≥mico"
)

# Asegurarse que los nombres coincidan
names(correlaciones) <- nombres_legibles

# Paso 6: Ordenar y mostrar
correlaciones_ordenadas <- sort(correlaciones, decreasing = TRUE)
correlaciones_ordenadas
```

d\. Realizar una comparaci√≥n de la distribuci√≥n de cada una de las variables con respecto a la variable de inter√©s.

```{r}
# Cargar librer√≠as
library(tidyverse)

# Cargar datos limpios
prob1 <- read.csv("datosTF.csv", header = TRUE)
prob1$P4 <- ifelse(prob1$P4 == 1, "SI", "NO")
prob1$P4 <- factor(prob1$P4, levels = c("NO", "SI"))

str(prob1)

# ----------- Edad
ggplot(prob1, aes(x = P4, y = EDAD, fill = P4)) +
  geom_boxplot() +
  labs(title = "Distribuci√≥n de Edad por respuesta en P4",
       x = "¬øLee informaci√≥n nutrimental?",
       y = "Edad") +
  scale_fill_manual(values = c("NO" = "purple", "SI" = "forestgreen")) +
  theme_minimal()


# ----------- P1, calor√≠as estimadas
ggplot(prob1, aes(x = as.factor(P1), fill = P4)) +
  geom_bar(position = "fill") +
  labs(title = "Distribuci√≥n de P1 (calor√≠as) por respuesta en P4",
       x = "Categor√≠a de calor√≠as estimadas",
       y = "Proporci√≥n",
       fill = "P4") +
  theme_minimal()


# ----------- P3, tabla nutrimental
ggplot(prob1, aes(x = as.factor(P3), fill = P4)) +
  geom_bar(position = "fill") +
  labs(title = "Conocimiento de info nutrimental (P3) por P4",
       x = "P3: ¬øConoce info nutrimental?",
       y = "Proporci√≥n",
       fill = "P4") +
  theme_minimal()


# ----------- Sexo
ggplot(prob1, aes(x = as.factor(SEXO), fill = P4)) +
  geom_bar(position = "fill") +
  labs(title = "Distribuci√≥n de Sexo por respuesta en P4",
       x = "Sexo (1 = Hombre, 2 = Mujer)",
       y = "Proporci√≥n",
       fill = "P4") +
  theme_minimal()



# ----------- Regi√≥n
ggplot(prob1, aes(x = as.factor(REGION), fill = P4)) +
  geom_bar(position = "fill") +
  labs(title = "Distribuci√≥n por Regi√≥n geogr√°fica y lectura P4",
       x = "Regi√≥n (1 = Norte, ..., 4 = Sur)",
       y = "Proporci√≥n",
       fill = "P4") +
  theme_minimal()



# ----------- Dominio 
ggplot(prob1, aes(x = as.factor(DOMINIO), fill = P4)) +
  geom_bar(position = "fill") +
  labs(title = "Distribuci√≥n de zona (Dominio) por P4",
       x = "Dominio (1 = Urbano, 2 = Rural)",
       y = "Proporci√≥n",
       fill = "P4") +
  theme_minimal()




# ----------- Estrato sociodemogr√°fico
ggplot(prob1, aes(x = as.factor(ESTRATO), fill = P4)) +
  geom_bar(position = "fill") +
  labs(title = "Distribuci√≥n por nivel socioecon√≥mico (Estrato) y P4",
       x = "Estrato (1 = Bajo ... 4 = Alto)",
       y = "Proporci√≥n",
       fill = "P4") +
  theme_minimal()



# ----------- Entidad Federativa (ENT)
ggplot(prob1, aes(x = as.factor(ENT), fill = P4)) +
  geom_bar(position = "fill") +
  labs(title = "Distribuci√≥n por Entidad Federativa y lectura de info nutrimental (P4)",
       x = "Entidad federativa (1 a 32)",
       y = "Proporci√≥n",
       fill = "P4") +
  theme_minimal()
```

e\. Otros an√°lisis bivariados y/o multivariados.

f\. Escribir los hallazgos e informaci√≥n √∫til de este paso

-   **Edad** muestra una distribuci√≥n distinta entre quienes leen y quienes no leen la informaci√≥n nutrimental. El gr√°fico de boxplot indica que las personas que **no leen tienden a ser ligeramente mayores**. Aunque la correlaci√≥n es baja (r = -0.038), el patr√≥n visual respalda esta diferencia. Agruparemos las edades por intervalos.

-   En **P1** (percepci√≥n de calor√≠as que se deben consumir), se observ√≥ una **asociaci√≥n importante con P4**. Aquellos que **no leen** las etiquetas se distribuyen de forma distinta entre las categor√≠as cal√≥ricas, siendo m√°s frecuentes en los extremos. Esta variable present√≥ la correlaci√≥n **m√°s fuerte con la variable objetivo** (r = -0.193), por lo que es una **predictora √∫til para modelado**.

-   En el caso de **P3**, la variable mostr√≥ **desviaci√≥n est√°ndar cero** al realizar la limpieza de datos, por lo que fue imposible calcular su correlaci√≥n. Esto se debe a que, l√≥gicamente, **si una persona responde ‚Äús√≠‚Äù en P4 (que lee la informaci√≥n), necesariamente debe haber respondido ‚Äús√≠‚Äù en P3 (que sabe que existe dicha informaci√≥n)**. Por esta raz√≥n, la variable **P3 est√° impl√≠citamente contenida en P4**, y su inclusi√≥n no aporta valor explicativo adicional. **Pensamos eliminarla del modelo para evitar redundancia.**

-   Las variables **Sexo**, **Regi√≥n**, **Dominio (zona urbana/rural)** y **Estrato socioecon√≥mico** muestran patrones visuales diferenciables en las proporciones de lectura (P4), aunque sus **correlaciones individuales fueron bajas** (todas menores a r = ¬±0.06). Sin embargo, se sugiere conservarlas en el modelado, ya que podr√≠an tener **efectos combinados o no lineales**, √∫tiles en algoritmos como √°rboles de decisi√≥n.

-   Finalmente, variables t√©cnicas como **Entidad federativa (ENT)**, **UPM de dise√±o** y **Estrato de dise√±o** presentaron correlaciones cercanas a cero. Aunque pueden ser √∫tiles para an√°lisis exploratorio o ajustes de dise√±o muestral, **se sugiere descartarlas para el modelado predictivo** si no se justifica su aporte explicativo.

3\. Preparaci√≥n de los datos

Transformaciones e ingenier√≠a de caracter√≠sticas, colocar criterio en que se bas√≥ cualquiera de las decisiones

a\. Omitir alguna caracter√≠stica, cambiar de num√©rica a texto o crear una nueva a partir de otras

```{r}
library(dplyr)
# Leer los datos originales
datos <- read.csv("datosTF.csv", header = TRUE)

# Copiar los datos a un nuevo data frame para trabajar
pruebas <- datos

# Eliminar las columnas

pruebas$EST_DIS <- NULL
pruebas$ENT <- NULL
pruebas$UPM_DIS <- NULL

# Crear nueva columna Edad_grupo
pruebas <- pruebas |> 
  mutate(Edad_grupo = case_when(
    EDAD >= 20 & EDAD <= 34 ~ "20‚Äì34",
    EDAD >= 35 & EDAD <= 49 ~ "35‚Äì49",
    EDAD >= 50 & EDAD <= 64 ~ "50‚Äì64",
    EDAD >= 65 & EDAD <= 80 ~ "65‚Äì80",
    EDAD > 80              ~ "80+"
  ))


colSums(is.na(pruebas))
# Confirmar los cambios
str(pruebas)
```

b\. Sustituci√≥n (imputaci√≥n)

i\. De los valores NA.

ii\. De las respuestas de No sabe/No responde, si se considera apropiado o no.

```{r}
pruebas$P1[pruebas$P1 == 9] <- NA


pruebas$P3[is.na(pruebas$P3)] <- 9  # Convertir NA a 9

pruebas$P4[pruebas$P4 == 9] <- NA
pruebas$P7[pruebas$P7 == 9] <- NA


pruebas$P4[is.na(pruebas$P4)] <- 2
# Convertir P4 a binaria si es factor
pruebas$P4_bin <- ifelse(pruebas$P4 == "SI" | pruebas$P4 == 1, 1,
                         ifelse(pruebas$P4 == "NO" | pruebas$P4 == 2, 0, NA))


# Correlaci√≥n con pares completos
cor.test(pruebas$P4_bin, as.numeric(pruebas$P3), use = "complete.obs")


table(pruebas$P3, useNA = "ifany")

table(pruebas$P4, useNA = "ifany")
table(datos$P4, useNA = "ifany")
```

```{r}
library(class)  # contiene la funci√≥n knn

library(dplyr)
# Leer los datos originales
datos <- read.csv("datosTF.csv", header = TRUE)

# Copiar los datos a un nuevo data frame para trabajar
pruebas <- datos

pruebas$P7 <- NULL
pruebas$EST_DIS <- NULL
pruebas$ENT <- NULL
pruebas$UPM_DIS <- NULL

# Paso 1: Separar observaciones con y sin NA en P4
train_knn <- subset(pruebas, !is.na(P4))  # Datos completos (s√≠ tienen P4)
test_knn  <- subset(pruebas, is.na(P4))   # Datos incompletos (falta P4)

# Paso 2: Seleccionar rasgos predictivos para k-NN
# Usa solo variables sin NA y num√©ricas/categ√≥ricas √∫tiles
rasgos <- c( "EDAD", "SEXO", "DOMINIO", "REGION", "ESTRATO")

# Paso 3: Aseg√∫rate de no tener NA en los rasgos seleccionados
train_knn <- train_knn[complete.cases(train_knn[, rasgos]), ]
test_knn  <- test_knn[complete.cases(test_knn[, rasgos]), ]

# Paso 4: Aplicar k-NN para predecir P4 en test_knn
P4_pred <- knn(train_knn[, rasgos],
               test_knn[, rasgos],
               cl = train_knn$P4,
               k = 5)

# Paso 5: Asignar las predicciones a test_knn
test_knn$P4 <- P4_pred

# Paso 6: Unir los datos imputados con los datos originales
pruebas_imputado <- rbind(train_knn, test_knn)


pruebas_completo <- rbind(train_knn, test_knn)
nrow(pruebas_completo)  # Debe dar 42207
str(pruebas_completo)

# Convertir P4 a binaria: SI (1) / NO (0)
pruebas_completo$P4_bin <- ifelse(pruebas_completo$P4 == 1 | pruebas_completo$P4 == "SI", 1,
                                  ifelse(pruebas_completo$P4 == 2 | pruebas_completo$P4 == "NO", 0, NA))

# Asegurarte que P3 est√© en formato num√©rico
pruebas_completo$P3 <- as.numeric(pruebas_completo$P3)

# Calcular correlaci√≥n
cor.test(pruebas_completo$P4_bin, pruebas_completo$P3, use = "complete.obs")

```

c\. En variables categ√≥ricas considerar

i\. Agrupar para no manejar demasiados valores.

-   La variable ENT (Entidad federativa), que originalmente ten√≠a **32 niveles**, fue evaluada. Aunque es una variable relevante geogr√°ficamente, **no se incluy√≥ en el modelado final**, ya que su granularidad y baja correlaci√≥n con la variable objetivo (P4) no justificaban su uso.

    En caso de requerirse m√°s adelante, podr√≠a agruparse en macrozonas como **Norte, Centro, CDMX y Sur**, ya representadas en la variable REGION.

ii\. Eliminar renglones con menos de 10 ocurrencias o agruparlos.

```{r}
table(pruebas_completo$P1)
table(pruebas_completo$P3)
table(pruebas_completo$P4)
table(pruebas_completo$SEXO)
table(pruebas_completo$DOMINIO)
table(pruebas_completo$REGION)
table(pruebas_completo$ESTRATO)
```

```{r}
# Filtrar casos con P1 o P3 igual a 9 y P4 distinto de 9
casos_inconsistentes <- subset(pruebas_completo, 
                                (P1 == 9 | P3 == 9) & P4 != 9)

# Mostrar cu√°ntos casos hay
nrow(casos_inconsistentes)

# Opcional: ver tabla cruzada
table(casos_inconsistentes$P1, casos_inconsistentes$P4)
table(casos_inconsistentes$P3, casos_inconsistentes$P4)


# Leer los datos originales
datos <- read.csv("datosTF.csv", header = TRUE)
datos$P1[is.na(datos$P1)] <- 9
datos$P3[is.na(datos$P3)] <- 9

# Filtrar casos con P1 o P3 igual a 9 y P4 distinto de 9
casos_inconsistentes <- subset(datos, 
                                (P1 == 9 | P3 == 9) & P4 != 9)

# Mostrar cu√°ntos casos hay
nrow(casos_inconsistentes)

# Opcional: ver tabla cruzada
table(casos_inconsistentes$P1, casos_inconsistentes$P4)
table(casos_inconsistentes$P3, casos_inconsistentes$P4)
```

iii\. Crear variables binarias.

d\. En variables cuantitativas, sean discretas o continuas, considerar.

i\. Omitir el percentil 1 y el 99 de los datos, para disminuir outliers.

ii\. Crear categor√≠as por ejemplo en edad si es bebe, ni√±o, adolescente, adulto y adulto mayor.

```{r}
library(dplyr)

pruebas <- pruebas |> 
  mutate(Edad_grupo = case_when(
    EDAD <= 30                  ~ "Joven",
    EDAD >= 31 & EDAD <= 45     ~ "Adulto joven",
    EDAD >= 46 & EDAD <= 60     ~ "Adulto",
    EDAD >= 61                  ~ "Adulto mayor"
  ))
```

e\. Realizar actividades de entendimiento de los datos, si se considera necesario ante los cambios.

4\. Modelado

a\. Conocimiento previo

i\. Elegir 3 algoritmos y 2 predictores para generar las regiones de decisi√≥n.

ii\. Elegir 2 de los algoritmos, que se caractericen por ser lentos y usarlos de forma directa (sin resampling) con todos

los atributos posibles, para medir el tiempo requerido para entrenar un modelo.

b\. Experimentos

i\. Especificar por algoritmo las variables a usar, as√≠ como si se van a escalar (normalizar o estandarizar) o no.

ii\. Explicar la estrategia de creaci√≥n de CE, CV y CP, junto al m√©todo de remuestreo a utilizar.

iii\. Definir los valores de los hiperpar√°metros a probar.

iv\. Construir los modelos de todos los algoritmos bajo las condiciones establecidas.
